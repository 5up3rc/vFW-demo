#!/bin/bash
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2018
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

set -o nounset
set -o pipefail
set -o xtrace

# install_dependencies() - Install required dependencies
function install_dependencies {
    apt install -y software-properties-common
    add-apt-repository -y ppa:openjdk-r/ppa
    apt update

    apt install --allow-unauthenticated -y make wget openjdk-8-jdk gcc libcurl4-openssl-dev python-pip bridge-utils apt-transport-https ca-certificates upstart
}

# install_pip_pkg() - Install Python module
function install_pip_pkg {
    local pkg=$1

    if ! which pip; then
        curl -sL https://bootstrap.pypa.io/get-pip.py | python
    fi
    pip install --upgrade pip

    pip install $pkg
}

# install_vpp() - Install VPP
function install_vpp {
    local RELEASE=".stable.1609"
    echo "deb [trusted=yes] https://nexus.fd.io/content/repositories/fd.io$RELEASE.ubuntu.$(lsb_release -c -s).main/ ./" | tee -a /etc/apt/sources.list.d/99fd.io.list
    apt-get update
    apt-get install -y vpp vpp-dpdk-dkms vpp-lib vpp-dbg vpp-plugins vpp-dev
}

# install_vfw_scripts() -
function install_vfw_scripts {
    local version=$(cat /opt/config/demo_artifacts_version.txt)
    local repo_url="https://nexus.onap.org/content/repositories/staging/org/onap/demo/vnf/"

    pushd /opt
    for script in v_firewall_init.sh vfirewall.sh; do
        wget https://git.onap.org/demo/plain/vnfs/vFW/scripts/$script
        chmod +x $script
    done

    wget "${repo_url}/sample-distribution/${version}/sample-distribution-${version}-hc.tar.gz"
    tar -zmxf sample-distribution-$version-hc.tar.gz
    mv sample-distribution-$version honeycomb

    wget "${repo_url}/ves5/ves/${version}/ves-${version}-demo.tar.gz"
    tar -zmxf ves-${version}-demo.tar.gz
    mv ves-$version VES

    wget "${repo_url}/ves5/ves_vfw_reporting/${version}/ves_vfw_reporting-${version}-demo.tar.gz"
    tar -zmxf ves_vfw_reporting-${version}-demo.tar.gz
    mv ves_vfw_reporting-$version /opt/VES/evel/evel-library/code/VESreporting

    chmod +x /opt/VES/evel/evel-library/code/VESreporting/go-client.sh
    pushd /opt/VES/evel/evel-library/bldjobs/
    make clean
    make
    sleep 1
    popd

    rm *.tar.gz

    # TODO(electrocucaracha) Fix it in upstream
    sed -i 's/# Provides:/# Provides:          firewall/g' vfirewall.sh
    sed -i 's/start vpp/systemctl start vpp/g' v_firewall_init.sh
    mv vfirewall.sh /etc/init.d
    update-rc.d vfirewall.sh defaults
    systemctl start firewall
    popd
}

mkdir -p /opt/config/
echo "192.168.20.0/24" > /opt/config/protected_net_cidr.txt
echo "192.168.10.100"  > /opt/config/fw_ipaddr.txt
echo "192.168.20.250"  > /opt/config/sink_ipaddr.txt
echo "1.3.0"           > /opt/config/demo_artifacts_version.txt

mkdir -p /var/lib/honeycomb/persist/{config,context}/

install_dependencies
install_pip_pkg jsonschema
install_vpp
install_vfw_scripts
